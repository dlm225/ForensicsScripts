#!/bin/bash

# RunCase script will walk users through various scripts to parse data from an evidence collection.

###### FUNCTIONS

proxy_overview()
{
	echo "Please wait...process may take a few minutes to complete..."
	echo ""
	echo "PROXY CACHE OVERVIEW"
	echo "------------------------------------------------------------"
	echo -n "Total size of proxy cache (in bytes): "
	du -sb $proxypath | awk '{print $1}'
	echo -n "Number of proxy files: "
	find . -type f | wc -l
	echo -n "Number of unique URLs: " 
	for file in $( grep -rail http:// $proxypath ); 
	do strings $file | grep ^http|head -1;done | uniq | wc -l
	echo -n "Number of unique domains: "
	for file in $( grep -rail http:// $proxypath ); 
        do strings $file | grep ^http|head -1;done | awk -F/ '{print $3}' | sort | uniq -c | wc -l
	echo "Top 15 domains (by count):"
	for file in $( grep -rail http:// $proxypath ); 
        do strings $file | grep ^http|head -1;done | awk -F/ '{print $3}' | sort | uniq -c | sort -nr | sed -n 1,15p
	press_enter
}

press_enter()
{
	echo -en "\nPress ENTER to continue..."
	read
	clear
}

case_setup()
# At the start, it will ask users for variables to add to PATH for use with other scripts in collection of scripts.
{
	clear
	echo "### Start New Case Setup ###"
	echo ""
	echo "Create working evidence folder (NEW folder name for this case)"
	echo "This script will create the folder in the user's home directory"

	echo -n "Output folder name > "
	read evpath
	if [ -d ~/$evpath ]; then
		echo "That folder exists...exiting"
		press_enter
		exit
	else
		sudo mkdir ~/$evpath
		echo ""
		echo "Working output path set to: /home/$USER/$evpath"
		echo ""
		press_enter
	fi
}

proxycache_tree()
{
	echo "Proxy evidence tree (4 levels deep):"
	tree -h -L 4 $proxypath
	echo "Writing full tree dump to file...please wait..."
	sudo tree -h $proxypath -o /home/$USER/$evpath/proxyevidencetreeFULL.txt
	echo "Completed..."
	press_enter
}

proxymenu()
{
	clear
        if [[ $proxypath == "" ]]; then
		echo "Enter location of proxy evidence"
        	echo ""
		echo -n "Location > "
        	read -e proxypath
        	echo ""
	else
		echo "Proxy cache evidence path set to:"
		echo "$proxypath"
		press_enter
	fi
	unset proxyselection
	until [ $proxyselection == "0" ]; do
        	clear
	        echo "
PROXY CACHE MENU
---------------------------------------------------------
1 - Display proxy evidence tree 
	(limited to 4 levels deep)
	(full tree dumped to file)
2 - Display proxy cache overview
3 - Retrieve list of URLs
4 - asdf

0 - exit to MAIN MENU"

        	echo ""
        echo -n "Enter selection: "
        read proxyselection
        echo ""
        case $proxyselection in
		1 ) proxycache_tree;;
		2 ) proxy_overview;;
		0 ) return;;
                * ) echo "Please enter a number"; press_enter
        esac
	done
}

pcap_info()
{

}

pcap_filter()
{
	clear
	echo "
PCAP FILTER MENU
----------------------------------
Choose a filter:
1 - by time
2 - by IP address (src or dst)
3 - search for string

0 - return to pcap menu"

	echo ""
	echo -n "Enter selection: "
	read proxyfilterselection
	echo ""
	case $proxyfilterselection in
		1) pcap_editbytime;;
		2) pcap_filterbyIP;;
		3) pcap_searchforstring;;
		0) return;;
		*) echo "Please enter a number"; press_enter
	esac
	done

        clear
        echo "
PCAP FILTER MENU
----------------------------------"
        ls -l *.pcap
        echo ""
        echo -n "Which pcap file? : "
        read -e pcapfile1


	
}

pcap_split()
{

}

pcap_merge()
{

}

pcapmenu()
{
	clear
	if [[ $pcappath == "" ]]; then
                echo "Enter location of pcap evidence"
                echo ""
                echo -n "Location > "
                read -e pcappath
                echo ""
        else
                echo "PCAP evidence path set to:"
                echo "$pcappath"
                press_enter
        fi
        unset pcapselection
        until [ $pcapselection == "0" ]; do
                clear
                echo "
PCAP ANALYSIS MENU
---------------------------------------------------------
1 - Display pcap file(s) information 
2 - Filter a pcap
3 - Split a pcap file by time or size
4 - Merge 2 or more pcap files

0 - exit to MAIN MENU"

                echo ""
        echo -n "Enter selection: "
        read pcapselection
        echo ""
        case $pcapselection in
                1 ) pcap_info;;
                2 ) pcap_filter;;
		3 ) pcap_split;;
		4 ) pcap_merge;;
                0 ) return;;
                * ) echo "Please enter a number"; press_enter
        esac
        done
}

main_menu()
{
	until [ $mainselection == "0" ]; do
		clear
		echo "
MAIN MENU
-----------------------
1 - Proxy evidence menu
2 - PCAP Analysis
3 - asdfs
4 - asdf

0 - exit program"

	echo ""
	echo -n "Enter selection: "
	read mainselection
	echo ""
	case $mainselection in
		1 ) proxymenu ;;
		2 ) pcapmenu ;;
		0 ) return;;
		* ) echo "Please enter a number"; press_enter
	esac
	done
}


######### MAIN
case_setup
main_menu
clear
exit 0
